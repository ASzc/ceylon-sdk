<project name="Ceylon SDK" basedir="." default="test">

    <property file="build.properties" />
    <property name="ceylon.verbosity" value="false"/>
    <property name="ceylon.executable" value="${basedir}/../ceylon-dist/dist/bin/ceylon"/>
    <property name="out.repo" location="modules"/>
    <property name="deps.repo" location="test-deps"/>
    <property name="test.repo" location="modules"/>
	
    <property name="p2" location="${basedir}/p2" />
    <property name="p2.build" location="${p2}/build" />
    <property name="p2.dist" location="${p2.build}/dist" />
    <property name="p2.build.plugins" location="${p2.build}/plugins" />
    <property name="p2.dist.repository" location="${p2.dist}/repository" />
	

    <!-- Local repository -->
    <property name="ceylon.repo.dir" location="${user.home}/.ceylon/repo" />
    
    <path id="ant-tasks">
        <pathelement location="${ceylon.ant.lib}"/>
    </path>
    
    <typedef resource="com/redhat/ceylon/ant/antlib.xml" classpathref="ant-tasks"/>

    <reposet id="reposet.compile.test">
        <repo url="${out.repo}"/>
        <repo url="${deps.repo}"/><!-- Needed for h2.jar dep of test.ceylon.dbc -->
    </reposet>
    
    <reposet id="reposet.run.test">
        <reposet refid="reposet.compile.test"/>
        <repo url="${test.repo}"/>
    </reposet>
    
    <moduleset id="modules.sdk.jvm">
        <module name="ceylon.collection"/>    	
        <module name="ceylon.dbc"/>
        <module name="ceylon.file"/>
        <module name="ceylon.html"/>
        <module name="ceylon.interop.java"/>
        <module name="ceylon.io"/>
        <module name="ceylon.json"/>
    	<module name="ceylon.logging"/>
        <module name="ceylon.math"/>
        <module name="ceylon.net"/>
        <module name="ceylon.process"/>
        <module name="ceylon.test"/>
        <module name="ceylon.time"/>
    	<module name="ceylon.unicode"/>
        <module name="com.redhat.ceylon.test"/>
    	<module name="com.redhat.ceylon.testjvm"/>
    </moduleset>
    
    <moduleset id="modules.sdk.js">
        <module name="ceylon.collection"/>
    	<module name="ceylon.html"/>
        <module name="ceylon.json"/>
        <module name="ceylon.test"/>
        <module name="ceylon.time"/>
    	<module name="com.redhat.ceylon.test"/>
    	<module name="com.redhat.ceylon.testjs"/>
    </moduleset>
    
    <moduleset id="modules.test.jvm">
    	<module name="test.ceylon.test.suite"/>    	
        <module name="test.ceylon.math"/>
        <module name="test.ceylon.collection"/>
        <module name="test.ceylon.file"/>
        <module name="test.ceylon.io"/>
        <module name="test.ceylon.json"/>
        <module name="test.ceylon.net"/>
        <module name="test.ceylon.process"/>
        <module name="test.ceylon.time"/>
        <module name="test.ceylon.dbc"/>
        <module name="test.ceylon.interop.java"/>
    	<module name="test.ceylon.unicode"/>
    	<module name="test.ceylon.html"/>
    </moduleset>
    
    <moduleset id="modules.test.js">
    	<module name="test.ceylon.test.suite"/>
        <module name="test.ceylon.collection"/>
        <module name="test.ceylon.html"/>
        <module name="test.ceylon.json"/>
        <module name="test.ceylon.time"/>
    </moduleset>
    
    <target name="clean"
        description="Deletes the test-modules and modules directories">
        <delete dir="${out.repo}"/>
        <delete dir="${test.repo}"/>
    </target>
    
    <target name="compile-jvm">
        
        <ceylon-compile executable="${ceylon.executable}"
            verbose="${ceylon.verbosity}"
            encoding="UTF-8"
            pack200="true">
            <moduleset refid="modules.sdk.jvm"/>
        </ceylon-compile>
        
    </target>

    <target name="compile-js">
        
        <ceylon-compile-js executable="${ceylon.executable}"
            verbose="${ceylon.verbosity}"
            encoding="UTF-8">
            <moduleset refid="modules.sdk.js"/>
        </ceylon-compile-js>
        
    </target>
    
    <target name="compile" depends="compile-jvm,compile-js"
            description="Compiles the SDK modules to the 'modules' repository" />

    <target name="compile-test-jvm" depends="compile-jvm">
        <ceylon-compile executable="${ceylon.executable}"
            src="test-source"
            out="${test.repo}"
            verbose="${ceylon.verbosity}"
            encoding="UTF-8">
            <reposet refid="reposet.compile.test"/> 
        	<module name="test.ceylon.test.stubs"/>
            <moduleset refid="modules.test.jvm"/>
        </ceylon-compile>
    </target>

    <target name="compile-test-js" depends="compile-js">
        <ceylon-compile-js executable="${ceylon.executable}"
            src="test-source"
            out="${test.repo}"
            verbose="${ceylon.verbosity}"
            encoding="UTF-8">
            <reposet refid="reposet.compile.test"/>
        	<module name="test.ceylon.test.stubs"/>
            <moduleset refid="modules.test.js"/>
        </ceylon-compile-js>
    </target>
            
    <target name="compile-test" depends="compile,compile-test-jvm,compile-test-js"
        description="Compiles the test modules to the 'test-modules' repository" />

    <target name="test-jvm" depends="compile-test-jvm"
        description="Runs the compiled test modules from the 'test-modules' repository">
        <ceylon-test>
            <reposet refid="reposet.run.test"/>
            <moduleset refid="modules.test.jvm"/>
        </ceylon-test>
    </target>

    <target name="test-js" depends="compile-test-js">
        <ceylon-test-js>
            <reposet refid="reposet.run.test"/>
            <moduleset refid="modules.test.js"/>
        </ceylon-test-js>
    </target>

    <target name="test" depends="compile-test,test-jvm,test-js"
        description="Runs the compiled test modules from the 'test-modules' repository" />

    <target name="doc" 
            description="Documents the SDK modules to the 'modules' repository">
        
        <ceylon-doc executable="${ceylon.executable}"
            includesourcecode="true"
            nomtimecheck="true"
            encoding="UTF-8">
            <moduleset refid="modules.sdk.jvm"/>
            <linkset>
                <link pattern="ceylon" url="http://modules.ceylon-lang.org/test/"/>
            </linkset>
        </ceylon-doc>
        
    </target>

    <target name="publish" depends="compile"
            description="Copies the SDK modules to the user's repository">
        <copy todir="${ceylon.repo.dir}" overwrite="true">
            <fileset dir="${out.repo}">
                <include name="ceylon/test/**"/>
            	<include name="com/redhat/ceylon/test/**"/>
            	<include name="com/redhat/ceylon/testjs/**"/>
            	<include name="com/redhat/ceylon/testjvm/**"/>
                <include name="ceylon/math/**"/>
                <include name="ceylon/collection/**"/>
                <include name="ceylon/file/**"/>
                <include name="ceylon/io/**"/>
                <include name="ceylon/json/**"/>
                <include name="ceylon/net/**"/>
                <include name="ceylon/process/**"/>
                <include name="ceylon/time/**"/>
                <include name="ceylon/dbc/**"/>
                <include name="ceylon/unicode/**"/>
                <include name="ceylon/interop/java/**"/>
                <include name="ceylon/html/**"/>
            </fileset>
        </copy>
    </target>

    <target name="publish-herd">
	<fail message="Please specify a target Herd upload repo url with -Dherd.repo=..." unless="herd.repo"/>
	<fail message="Please specify a target Herd user name with -Dherd.user=..." unless="herd.user"/>
	<fail message="Please specify a target Herd password with -Dherd.pass=..." unless="herd.pass"/>
        
        <ceylon-compile executable="${ceylon.executable}"
            verbose="${ceylon.verbosity}"
	    out="${herd.repo}"
	    user="${herd.user}"
	    pass="${herd.pass}"
            encoding="UTF-8">
            <moduleset refid="modules.sdk.jvm"/>
        </ceylon-compile>
        
        <ceylon-compile-js executable="${ceylon.executable}"
            verbose="${ceylon.verbosity}"
	    out="${herd.repo}"
	    user="${herd.user}"
	    pass="${herd.pass}"
            encoding="UTF-8">
            <moduleset refid="modules.sdk.js"/>
        </ceylon-compile-js>

        <ceylon-doc executable="${ceylon.executable}"
            includesourcecode="true"
            nomtimecheck="true"
	    out="${herd.repo}"
	    user="${herd.user}"
	    pass="${herd.pass}"
            encoding="UTF-8">
            <moduleset refid="modules.sdk.jvm"/>
        </ceylon-doc>
        
    </target>
	
	<!-- Rule to setup a plugins directory with required bundles -->
    <target name="generate-p2-repo">
    	<delete failonerror="false" dir="${p2.build.plugins}"/>
        <mkdir dir="${p2.build.plugins}" />
    	<delete failonerror="false" dir="${p2.dist.repository}"/>
        <mkdir dir="${p2.dist.repository}" />    	
		<copy todir="${p2.build.plugins}" flatten="true">
			<fileset dir="${out.repo}" includes="**/*.car"/>
			<globmapper from="*.car" to="*.jar"/>
		</copy>
    	<makeurl property="destinationRepository" file="${p2.dist.repository}"/>
    	<makeurl property="categoryDefinition" file="${p2}/category.xml"/>
    	<exec dir="${basedir}" executable="eclipse" failonerror="true">
    		<arg value="-noSplash"/>
    		<arg value="-console"/>
    		<arg value="-consolelog"/>
    		<arg value="--launcher.suppressErrors"/>
    		<arg value="-application"/>
    		<arg value="org.eclipse.equinox.p2.publisher.FeaturesAndBundlesPublisher"/>
    		<arg value="-metadataRepositoryName"/>
    		<arg value="Ceylon SDK Bundles"/>
    		<arg value="-metadataRepository"/>
    		<arg value="${destinationRepository}"/>
    		<arg value="-artifactRepositoryName"/>
    		<arg value="Ceylon SDK Bundles"/>
    		<arg value="-artifactRepository"/>
    		<arg value="${destinationRepository}"/>
    		<arg value="-source"/>
    		<arg file="${p2.build}"/>
    		<arg value="-publishArtifacts"/>
    	</exec>
    	<exec dir="${basedir}" executable="eclipse">
    		<arg value="-noSplash"/>
    		<arg value="-console"/>
    		<arg value="-consolelog"/>
    		<arg value="--launcher.suppressErrors"/>
    		<arg value="-application"/>
    		<arg value="org.eclipse.equinox.p2.publisher.CategoryPublisher"/>
    		<arg value="-metadataRepository"/>
    		<arg value="${destinationRepository}"/>
    		<arg value="-categoryDefinition"/>
    		<arg value="${categoryDefinition}"/>
    		<arg value="-categoryQualifier"/>
    		<arg value="ceylon.sdk"/>
    	</exec>
    </target>

	<target name="ide" depends="compile-jvm,ide-quick"/>

    <target name="ide-quick" depends="generate-p2-repo"/>

</project>
